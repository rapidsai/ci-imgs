# SPDX-FileCopyrightText: Copyright (c) 2023-2025 NVIDIA CORPORATION & AFFILIATES.
# All rights reserved.
# SPDX-License-Identifier: Apache-2.0
name: build and publish imgs workflow

on:
  workflow_call:
    inputs:
      build_type:
        required: true
        type: string

defaults:
  run:
    shell: bash

jobs:
  compute-matrix:
    runs-on: ubuntu-latest
    outputs:
      MATRIX: ${{ steps.compute-matrix.outputs.MATRIX }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download gha-tools with git clone
        run: |
          git clone https://github.com/rapidsai/gha-tools.git -b main /tmp/gha-tools
          echo "/tmp/gha-tools/tools" >> "${GITHUB_PATH}"
      - name: Compute matrix
        id: compute-matrix
        run: |
          MATRIX=$(ci/compute-matrix.sh)
          echo "MATRIX=${MATRIX}" | tee -a ${GITHUB_OUTPUT}
        env:
          BUILD_TYPE: ${{ inputs.BUILD_TYPE }}
  docker:
    # IMAGE_REPO + the name generated by the 'build-image.yaml' workflow this
    # calls is sufficient to uniquely identify one job
    name: ${{ matrix.IMAGE_REPO }}
    needs: compute-matrix
    strategy:
      max-parallel: 50
      matrix: ${{ fromJSON(needs.compute-matrix.outputs.MATRIX) }}
      fail-fast: false
    secrets: inherit
    uses: ./.github/workflows/build-image.yaml
    with:
      ARCHES: ${{ toJSON(matrix.ARCHES) }}
      CUDA_VER: ${{ matrix.CUDA_VER }}
      LINUX_VER: ${{ matrix.LINUX_VER }}
      PYTHON_VER: ${{ matrix.PYTHON_VER }}
      IMAGE_REPO: ${{ matrix.IMAGE_REPO }}
      IMAGE_NAME: ${{ matrix.IMAGE_NAME }}
      DOCKERFILE: ${{ matrix.DOCKERFILE }}
      DOCKER_TARGET: ${{ matrix.DOCKER_TARGET }}
  build-multiarch-manifest:
    name: manifest (${{ matrix.CUDA_VER }}, ${{ matrix.PYTHON_VER }}, ${{ matrix.LINUX_VER }}, ${{ matrix.IMAGE_REPO }})
    needs: [docker, compute-matrix]
    strategy:
      matrix: ${{ fromJSON(needs.compute-matrix.outputs.MATRIX) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download gha-tools with git clone
        run: |
          git clone https://github.com/rapidsai/gha-tools.git -b main /tmp/gha-tools
          echo "/tmp/gha-tools/tools" >> "${GITHUB_PATH}"
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.GPUCIBOT_DOCKERHUB_USER }}
          password: ${{ secrets.GPUCIBOT_DOCKERHUB_TOKEN }}
      - name: Create multiarch manifest
        env:
          ARCHES: ${{ toJSON(matrix.ARCHES) }}
          CUDA_VER: ${{ matrix.CUDA_VER }}
          LINUX_VER: ${{ matrix.LINUX_VER }}
          PYTHON_VER: ${{ matrix.PYTHON_VER }}
          IMAGE_REPO: ${{ matrix.IMAGE_REPO }}
          BUILD_TYPE: ${{ inputs.build_type }}
          IMAGE_NAME: ${{ matrix.IMAGE_NAME }}
          IMAGE_NAME_NO_RAPIDS_VERSION: ${{ matrix.IMAGE_NAME_NO_RAPIDS_VERSION }}
        run: ci/create-multiarch-manifest.sh
